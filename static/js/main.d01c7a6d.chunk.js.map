{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","helpers/findCurrentUser.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","id","completed","title","cn","TodoList","todosList","todos","map","username","findCurrentUser","userId","usersFromServer","find","initialTodosList","App","useState","setTodosList","setTitle","currentUserId","setCurrentUserId","hasTitle","setHasTitle","hasUser","setHasUser","action","method","onSubmit","e","preventDefault","hasError","trim","todoIds","newTodoId","Math","max","prevList","htmlFor","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d01c7a6d.chunk.js","sourcesContent":["import { IUser } from '../../types/user';\n\ntype Props = {\n  user: IUser\n};\n\nexport const UserInfo: React.FC<Props> = ({\n  user: {\n    email,\n    name,\n  },\n}) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\n\nimport { ITodo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: ITodo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id,\n    completed,\n    title,\n    user,\n  },\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={\n        cn(\n          'TodoInfo',\n          { 'TodoInfo--completed': completed },\n        )\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { ITodo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: ITodo[]\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos: todosList,\n}) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todosList.map(todo => (\n          <TodoInfo todo={todo} key={todo.id} />\n        ))\n      }\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport const findCurrentUser = (userId: number) => {\n  return usersFromServer.find(user => user.id === userId);\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { ITodo } from './types/todo';\nimport { findCurrentUser } from './helpers/findCurrentUser';\n\nconst initialTodosList: ITodo[] = [...todosFromServer].map(todo => (\n  {\n    ...todo,\n    user: findCurrentUser(todo.userId),\n  }\n));\n\nexport const App = () => {\n  const [todosList, setTodosList] = useState(initialTodosList);\n  const [title, setTitle] = useState('');\n  const [currentUserId, setCurrentUserId] = useState(0);\n  const [hasTitle, setHasTitle] = useState(false);\n  const [hasUser, setHasUser] = useState(false);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    let hasError = false;\n\n    if (!title || !title.trim()) {\n      setHasTitle(true);\n      hasError = true;\n    }\n\n    if (!currentUserId) {\n      setHasUser(true);\n      hasError = true;\n    }\n\n    if (hasError) {\n      return;\n    }\n\n    setTitle('');\n    setCurrentUserId(0);\n    setHasTitle(false);\n    setHasUser(false);\n\n    const todoIds = todosList.map(todo => todo.id);\n    const newTodoId = Math.max(...todoIds) + 1;\n\n    setTodosList((prevList) => [\n      ...prevList,\n      {\n        id: newTodoId,\n        title,\n        completed: false,\n        userId: currentUserId,\n        user: findCurrentUser(currentUserId),\n      }]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">\n            Title:&nbsp;\n\n            <input\n              id=\"titleInput\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              placeholder=\"Enter a title\"\n              onChange={(e) => {\n                setTitle(e.target.value);\n                setHasTitle(false);\n              }}\n            />\n          </label>\n\n          {hasTitle\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            User:&nbsp;\n\n            <select\n              id=\"userSelect\"\n              data-cy=\"userSelect\"\n              value={currentUserId}\n              onChange={e => {\n                setCurrentUserId(+e.target.value);\n                setHasUser(false);\n              }}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {\n                [...usersFromServer].map(user => (\n                  <option\n                    value={user.id}\n                    key={user.id}\n                  >\n                    {user.name}\n                  </option>\n                ))\n              }\n            </select>\n          </label>\n\n          {hasUser\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todosList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}